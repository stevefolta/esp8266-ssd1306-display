#!/usr/bin/env python

import sys, re

def usage():
	sys.stderr.write('Usage: build-html to: <out-file> [strip: <prefix>] <in-file>...')
	sys.exit(1)

out_file = None
prefix = ""
files = []

def add_file(path):
	in_file = open(path, "rU")
	if path.startswith(prefix):
		path = path[len(prefix):]
	c_name = path
	c_name = re.sub(r'[^a-zA-Z0-9]', '_', c_name)
	out_file.write('static const char ICACHE_RODATA_ATTR __attribute__((aligned(4))) ' + c_name + '[] = {\n')
	size = 0
	for line in in_file:
		if line[-1] == '\n':
			line = line[:-1]
		size += len(line) + 2
		line = re.sub(r'\\', r'\\\\', line)
		line = re.sub(r'"', r'\\"', line)
		out_file.write('\t"' + line + '\\r\\n"\n')
	out_file.write('\t};\n')
	in_file.close()
	path_str = c_name + '_path'
	out_file.write('static const char ICACHE_RODATA_ATTR __attribute__((aligned(4))) ' + path_str + '[] = ');
	out_file.write('"' + path + '";\n');
	out_file.write('\n');
	files.append( (path_str, c_name, size) )


args = sys.argv[1:]
while args:
	arg = args.pop(0)
	if arg == "to:" or arg == "-o":
		args or usage()
		out_file = open(args.pop(0), "w")
	elif arg == "strip:":
		args or usage()
		prefix = args.pop(0)
	else:
		add_file(arg)

out_file.write('\n')
out_file.write('static const HTMLFileContents ICACHE_RODATA_ATTR files[] = {\n')
for f in files:
	out_file.write('\t{ ' + f[0] + ', ' + f[1] + ', ' + str(f[2]) + ' },\n')
out_file.write('\t};\n\n')

